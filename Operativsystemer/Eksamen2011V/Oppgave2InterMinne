1,a) Det er forskjell på hvor lang tid det tar for en CPU å hente data fra lagringsenhetene RAM, CPU-cache og harddisk. Omtrent hvor lang tid tar det for CPU å hente data fra disse tre enhetene, sammenlignet med tiden det tar å hente data fra registerne?
------------------------------------------------------------------------------------------
a) Om det tar et nanosekund å hente data fra et register, kan det ta 1-5 nanosekunder å hente fra CPU-cache, avhengig av om det er L1, L2 eller L3 cache og omtrent 10-50 nanosekunder å hente fra RAM. Disk aksess tar flere millisekunder, altså omtrent en million ganger så lang tid.

b) Forklar kort hvordan paging gjør det mulig å flytte deler av minnet for en prosess ut og inn av RAM.
-----------------------------------------------------------------------------------------------
Memory Management Unit har en pagetabell, det er også en pagetabell i RAM.
Her lagres alle instruksjoner CPU utfører.
Ved hjelp av en pagetabell i MMU og i selve minnet lagres lokasjonen for alle sider som befinner seg i RAM. Dermed kan alle instruksjoner CPU utfører bruke virtuelle adresser i sitt eget adresserom, uavhengig av hvor i det fysiske RAM siden virkelig ligger. Når sider lastes inn og ut fra swap-området, trenger bare pagetabellen å oppdateres og sidene kan plasseres hvor som helst i RAM.                                                                                                                                                                                                            c) Ved paging, kan det være forskjell på hvor instruksjonene legges når de ikke er i RAM og hvor prosessens data og variabler legges? Forklar kort                                                   -----------------------------------------------------------------------------------------------                                                                                                      Ja, det kan være forskjell på hvor instruksjonene legges når de ikke er i Ram. Mens instruksjonene og den kjørbare koden er fast og trengs ikke å endres, gjelder dette ikke data,varaiabler, heaper, disse kan endres dynamisk og bør helst legges på swap områder på disken slik at de kan skrives hurtig til når endringer skjer.                                                                                                                                                                                                                                                                           d, d) CPU utfører en x86-instruksjon som henter en byte fra RAM og legger den i et register. Vil CPU-cache kunne involveres når denne instruksjonen utføres? Forklar kort.                           --------------------------------------------------------------------------------------------                                                                                                         Ja, den vil bli involvert ettersom det først sjekkes om byten ligger i cache og den blir hentet ut derfra om den gjør det. Hvis den ikke gjør det er det en cache miss og det må hentes ut fra RAM.                                                                                                                                                                                                       e) CPU utfører en x86-instruksjon som sammenligner tallene i to registere. Vil CPU-cache kunne involveres når denne instruksjonen utføres? Forklar kort.                                             ---------------------------------------------------------------------------------------------                                                                                                        Nei, ettersom tallene allerede er lagret i registrene vil det her ikke være nødvendig å sjekke i CPU-cache.                                                                                                                                                                                                                                                                                               f) En liten CPU bruker 10-bits registere til å adressere en byte i internminnet. Hvor stort er da det virtuelle adresserommet som kan adresseres med disse 10-bit adressene?                         ------------------------------------------------------------------------------------------                                                                                                           2^10= 1024 adresser                                                                                                                                                                                                                                                                                                                                                                                       g) Det virtuelle adresserommet for alle prosesser på det samme systemer er delt inn i sider (pages) med en sidestørrelse på 128 bytes. Hvor mange sider utgjør det virtuelle adresserommet til en prosess?                                                                                                                                                                                                ----------------------------------------------------------------------------------------------                                                                                                       Det er plass til 1024/128=8 sider                                                                                                                                                                                                                                                                                                                                                                         h) Det fysiske minnet (RAM) som denne CPUen er koblet til er på bare 1 KByte. Forklar kort for dette eksempelet om virtuelt minne kan gjøre det mulig å kjøre et program som er på 2 KByte og dermed for stort for RAM.                                                                                                                                                                                   -------------------------------------------------------------------------------------------------                                                                                                    Det fysiske minnet er like stort som virtuelle. Bare en kbyte kan adresseres, derfor brukes fysisk og maks størrelse er på 1 KByte.                                                                                                                                                                                                                                                                       i) Hva tar lengst tid, en cache miss eller en page fault? Er forskjellen i tid det tar stor? Forklar kort.                                                                                           -----------------------------------------------------------------------------------------------                                                                                                      En page fault tar lengst tid og kan ta flere millisekunder. En cache miss tar 10 - 50 nano sekunder. Altså tar en page fault minst 100.000 ganger så lang tid.                                                                                                                                                                                                                                            j) I et C-program er et integer array med plass til 200 millioner heltall deklarert. Når man bruker dette arrayet vil elementene array[0], array[1], array[2] og så videre legges etterhverandre i RAM. Den viktigste delen av programmet ser slik ut:                                                                                                                                                                                                                                                                                                                                                            int i,j;                                                                                                                                                                                             for(i = 0;i < 2000000;i++){                                                                                                                                                                             j = i*100;                                                                                                                                                                                           array[i] = i;                                                                                                                                                                                     }                                   
1,a) Det er forskjell på hvor lang tid det tar for en CPU å hente data fra lagringsenhetene RAM, CPU-cache og harddisk. Omtrent hvor lang tid tar det for CPU å hente data fra disse tre enhetene, sammenlignet med tiden det tar å hente data fra registerne?
------------------------------------------------------------------------------------------
a) Om det tar et nanosekund å hente data fra et register, kan det ta 1-5 nanosekunder å hente fra CPU-cache, avhengig av om det er L1, L2 eller L3 cache og omtrent 10-50 nanosekunder å hente fra RAM. Disk aksess tar flere millisekunder, altså omtrent en million ganger så lang tid.

b) Forklar kort hvordan paging gjør det mulig å flytte deler av minnet for en prosess ut og inn av RAM.
-----------------------------------------------------------------------------------------------
Memory Management Unit har en pagetabell, det er også en pagetabell i RAM.
Her lagres alle instruksjoner CPU utfører.
Ved hjelp av en pagetabell i MMU og i selve minnet lagres lokasjonen for alle sider som befinner seg i RAM. Dermed kan alle instruksjoner CPU utfører bruke virtuelle adresser i sitt eget adresserom, uavhengig av hvor i det fysiske RAM siden virkelig ligger. Når sider lastes inn og ut fra swap-området, trenger bare pagetabellen å oppdateres og sidene kan plasseres hvor som helst i RAM.                                                                                                                                                                                                            c) Ved paging, kan det være forskjell på hvor instruksjonene legges når de ikke er i RAM og hvor prosessens data og variabler legges? Forklar kort                                                   -----------------------------------------------------------------------------------------------                                                                                                      Ja, det kan være forskjell på hvor instruksjonene legges når de ikke er i Ram. Mens instruksjonene og den kjørbare koden er fast og trengs ikke å endres, gjelder dette ikke data,varaiabler, heaper, disse kan endres dynamisk og bør helst legges på swap områder på disken slik at de kan skrives hurtig til når endringer skjer.                                                                                                                                                                                                                                                                           d, d) CPU utfører en x86-instruksjon som henter en byte fra RAM og legger den i et register. Vil CPU-cache kunne involveres når denne instruksjonen utføres? Forklar kort.                           --------------------------------------------------------------------------------------------                                                                                                         Ja, den vil bli involvert ettersom det først sjekkes om byten ligger i cache og den blir hentet ut derfra om den gjør det. Hvis den ikke gjør det er det en cache miss og det må hentes ut fra RAM.                                                                                                                                                                                                       e) CPU utfører en x86-instruksjon som sammenligner tallene i to registere. Vil CPU-cache kunne involveres når denne instruksjonen utføres? Forklar kort.                                             ---------------------------------------------------------------------------------------------                                                                                                        Nei, ettersom tallene allerede er lagret i registrene vil det her ikke være nødvendig å sjekke i CPU-cache.                                                                                                                                                                                                                                                                                               f) En liten CPU bruker 10-bits registere til å adressere en byte i internminnet. Hvor stort er da det virtuelle adresserommet som kan adresseres med disse 10-bit adressene?                         ------------------------------------------------------------------------------------------                                                                                                           2^10= 1024 adresser                                                                                                                                                                                                                                                                                                                                                                                       g) Det virtuelle adresserommet for alle prosesser på det samme systemer er delt inn i sider (pages) med en sidestørrelse på 128 bytes. Hvor mange sider utgjør det virtuelle adresserommet til en prosess?                                                                                                                                                                                                ----------------------------------------------------------------------------------------------                                                                                                       Det er plass til 1024/128=8 sider                                                                                                                                                                                                                                                                                                                                                                         h) Det fysiske minnet (RAM) som denne CPUen er koblet til er på bare 1 KByte. Forklar kort for dette eksempelet om virtuelt minne kan gjøre det mulig å kjøre et program som er på 2 KByte og dermed for stort for RAM.                                                                                                                                                                                   -------------------------------------------------------------------------------------------------                                                                                                    Det fysiske minnet er like stort som virtuelle. Bare en kbyte kan adresseres, derfor brukes fysisk og maks størrelse er på 1 KByte.                                                                                                                                                                                                                                                                       i) Hva tar lengst tid, en cache miss eller en page fault? Er forskjellen i tid det tar stor? Forklar kort.                                                                                           -----------------------------------------------------------------------------------------------                                                                                                      En page fault tar lengst tid og kan ta flere millisekunder. En cache miss tar 10 - 50 nano sekunder. Altså tar en page fault minst 100.000 ganger så lang tid.                                                                                                                                                                                                                                            j) I et C-program er et integer array med plass til 200 millioner heltall deklarert. Når man bruker dette arrayet vil elementene array[0], array[1], array[2] og så videre legges etterhverandre i RAM. Den viktigste delen av programmet ser slik ut:                                                                                                                                                                                                                                                                                                                                                            int i,j;                                                                                                                                                                                             for(i = 0;i < 2000000;i++){                                                                                                                                                                             j = i*100;                                                                                                                                                                                           array[i] = i;                                                                                                                                                                                     }                                  


1,a) Det er forskjell på hvor lang tid det tar for en CPU å hente data fra lagringsenhetene RAM, CPU-cache og harddisk. Omtrent hvor lang tid tar det for CPU å hente data fra disse tre enhetene, sammenlignet med tiden det tar å hente data fra registerne?
------------------------------------------------------------------------------------------
a) Om det tar et nanosekund å hente data fra et register, kan det ta 1-5 nanosekunder å hente fra CPU-cache, avhengig av om det er L1, L2 eller L3 cache og omtrent 10-50 nanosekunder å hente fra RAM. Disk aksess tar flere millisekunder, altså omtrent en million ganger så lang tid.

b) Forklar kort hvordan paging gjør det mulig å flytte deler av minnet for en prosess ut og inn av RAM.
-----------------------------------------------------------------------------------------------
Memory Management Unit har en pagetabell, det er også en pagetabell i RAM.
Her lagres alle instruksjoner CPU utfører.
Ved hjelp av en pagetabell i MMU og i selve minnet lagres lokasjonen for alle sider som befinner seg i RAM. Dermed kan alle instruksjoner CPU utfører bruke virtuelle adresser i sitt eget adresserom, uavhengig av hvor i det fysiske RAM siden virkelig ligger. Når sider lastes inn og ut fra swap-området, trenger bare pagetabellen å oppdateres og sidene kan plasseres hvor som helst i RAM.                                                                                                                                                                                                            c) Ved paging, kan det være forskjell på hvor instruksjonene legges når de ikke er i RAM og hvor prosessens data og variabler legges? Forklar kort                                                   -----------------------------------------------------------------------------------------------                                                                                                      Ja, det kan være forskjell på hvor instruksjonene legges når de ikke er i Ram. Mens instruksjonene og den kjørbare koden er fast og trengs ikke å endres, gjelder dette ikke data,varaiabler, heaper, disse kan endres dynamisk og bør helst legges på swap områder på disken slik at de kan skrives hurtig til når endringer skjer.                                                                                                                                                                                                                                                                           d, d) CPU utfører en x86-instruksjon som henter en byte fra RAM og legger den i et register. Vil CPU-cache kunne involveres når denne instruksjonen utføres? Forklar kort.                           --------------------------------------------------------------------------------------------                                                                                                         Ja, den vil bli involvert ettersom det først sjekkes om byten ligger i cache og den blir hentet ut derfra om den gjør det. Hvis den ikke gjør det er det en cache miss og det må hentes ut fra RAM.                                                                                                                                                                                                       e) CPU utfører en x86-instruksjon som sammenligner tallene i to registere. Vil CPU-cache kunne involveres når denne instruksjonen utføres? Forklar kort.                                             ---------------------------------------------------------------------------------------------                                                                                                        Nei, ettersom tallene allerede er lagret i registrene vil det her ikke være nødvendig å sjekke i CPU-cache.                                                                                                                                                                                                                                                                                               f) En liten CPU bruker 10-bits registere til å adressere en byte i internminnet. Hvor stort er da det virtuelle adresserommet som kan adresseres med disse 10-bit adressene?                         ------------------------------------------------------------------------------------------                                                                                                           2^10= 1024 adresser                                                                                                                                                                                                                                                                                                                                                                                       g) Det virtuelle adresserommet for alle prosesser på det samme systemer er delt inn i sider (pages) med en sidestørrelse på 128 bytes. Hvor mange sider utgjør det virtuelle adresserommet til en prosess?                                                                                                                                                                                                ----------------------------------------------------------------------------------------------                                                                                                       Det er plass til 1024/128=8 sider                                                                                                                                                                                                                                                                                                                                                                         h) Det fysiske minnet (RAM) som denne CPUen er koblet til er på bare 1 KByte. Forklar kort for dette eksempelet om virtuelt minne kan gjøre det mulig å kjøre et program som er på 2 KByte og dermed for stort for RAM.                                                                                                                                                                                   -------------------------------------------------------------------------------------------------                                                                                                    Det fysiske minnet er like stort som virtuelle. Bare en kbyte kan adresseres, derfor brukes fysisk og maks størrelse er på 1 KByte.                                                                                                                                                                                                                                                                       i) Hva tar lengst tid, en cache miss eller en page fault? Er forskjellen i tid det tar stor? Forklar kort.                                                                                           -----------------------------------------------------------------------------------------------                                                                                                      En page fault tar lengst tid og kan ta flere millisekunder. En cache miss tar 10 - 50 nano sekunder. Altså tar en page fault minst 100.000 ganger så lang tid.                                                                                                                                                                                                                                            j) I et C-program er et integer array med plass til 200 millioner heltall deklarert. Når man bruker dette arrayet vil elementene array[0], array[1], array[2] og så videre legges etterhverandre i RAM. Den viktigste delen av programmet ser slik ut:                                                                                                                                                                                                                                                                                                                                                            int i,j;                                                                                                                                                                                             for(i = 0;i < 2000000;i++){                                                                                                                                                                             j = i*100;                                                                                                                                                                                           array[i] = i;                                                                                                                                                                                     }                                   sdfdsfdsfsdfsdf
1,a) Det er forskjell på hvor lang tid det tar for en CPU å hente data fra lagringsenhetene RAM, CPU-cache og harddisk. Omtrent hvor lang tid tar det for CPU å hente data fra disse tre enhetene, sammenlignet med tiden det tar å hente data fra registerne?
------------------------------------------------------------------------------------------
a) Om det tar et nanosekund å hente data fra et register, kan det ta 1-5 nanosekunder å hente fra CPU-cache, avhengig av om det er L1, L2 eller L3 cache og omtrent 10-50 nanosekunder å hente fra RAM. Disk aksess tar flere millisekunder, altså omtrent en million ganger så lang tid.

b) Forklar kort hvordan paging gjør det mulig å flytte deler av minnet for en prosess ut og inn av RAM.
-----------------------------------------------------------------------------------------------
Memory Management Unit har en pagetabell, det er også en pagetabell i RAM.
Her lagres alle instruksjoner CPU utfører.
Ved hjelp av en pagetabell i MMU og i selve minnet lagres lokasjonen for alle sider som befinner seg i RAM. Dermed kan alle instruksjoner CPU utfører bruke virtuelle adresser i sitt eget adresserom, uavhengig av hvor i det fysiske RAM siden virkelig ligger. Når sider lastes inn og ut fra swap-området, trenger bare pagetabellen å oppdateres og sidene kan plasseres hvor som helst i RAM.                                                                                                                                                                                                            c) Ved paging, kan det være forskjell på hvor instruksjonene legges når de ikke er i RAM og hvor prosessens data og variabler legges? Forklar kort                                                   -----------------------------------------------------------------------------------------------                                                                                                      Ja, det kan være forskjell på hvor instruksjonene legges når de ikke er i Ram. Mens instruksjonene og den kjørbare koden er fast og trengs ikke å endres, gjelder dette ikke data,varaiabler, heaper, disse kan endres dynamisk og bør helst legges på swap områder på disken slik at de kan skrives hurtig til når endringer skjer.                                                                                                                                                                                                                                                                           d, d) CPU utfører en x86-instruksjon som henter en byte fra RAM og legger den i et register. Vil CPU-cache kunne involveres når denne instruksjonen utføres? Forklar kort.                           --------------------------------------------------------------------------------------------                                                                                                         Ja, den vil bli involvert ettersom det først sjekkes om byten ligger i cache og den blir hentet ut derfra om den gjør det. Hvis den ikke gjør det er det en cache miss og det må hentes ut fra RAM.                                                                                                                                                                                                       e) CPU utfører en x86-instruksjon som sammenligner tallene i to registere. Vil CPU-cache kunne involveres når denne instruksjonen utføres? Forklar kort.                                             ---------------------------------------------------------------------------------------------                                                                                                        Nei, ettersom tallene allerede er lagret i registrene vil det her ikke være nødvendig å sjekke i CPU-cache.                                                                                                                                                                                                                                                                                               f) En liten CPU bruker 10-bits registere til å adressere en byte i internminnet. Hvor stort er da det virtuelle adresserommet som kan adresseres med disse 10-bit adressene?                         ------------------------------------------------------------------------------------------                                                                                                           2^10= 1024 adresser                                                                                                                                                                                                                                                                                                                                                                                       g) Det virtuelle adresserommet for alle prosesser på det samme systemer er delt inn i sider (pages) med en sidestørrelse på 128 bytes. Hvor mange sider utgjør det virtuelle adresserommet til en prosess?                                                                                                                                                                                                ----------------------------------------------------------------------------------------------                                                                                                       Det er plass til 1024/128=8 sider                                                                                                                                                                                                                                                                                                                                                                         h) Det fysiske minnet (RAM) som denne CPUen er koblet til er på bare 1 KByte. Forklar kort for dette eksempelet om virtuelt minne kan gjøre det mulig å kjøre et program som er på 2 KByte og dermed for stort for RAM.                                                                                                                                                                                   -------------------------------------------------------------------------------------------------                                                                                                    Det fysiske minnet er like stort som virtuelle. Bare en kbyte kan adresseres, derfor brukes fysisk og maks størrelse er på 1 KByte.                                                                                                                                                                                                                                                                       i) Hva tar lengst tid, en cache miss eller en page fault? Er forskjellen i tid det tar stor? Forklar kort.                                                                                           -----------------------------------------------------------------------------------------------                                                                                                      En page fault tar lengst tid og kan ta flere millisekunder. En cache miss tar 10 - 50 nano sekunder. Altså tar en page fault minst 100.000 ganger så lang tid.                                                                                                                                                                                                                                            j) I et C-program er et integer array med plass til 200 millioner heltall deklarert. Når man bruker dette arrayet vil elementene array[0], array[1], array[2] og så videre legges etterhverandre i RAM. Den viktigste delen av programmet ser slik ut:                                                                                                                                                                                                                                                                                                                                                            int i,j;                                                                                                                                                                                             for(i = 0;i < 2000000;i++){                                                                                                                                                                             j = i*100;                                                                                                                                                                                           array[i] = i;                                                                                                                                                                                     }                                  



j) I et C-program er et integer array med plass til 200 millioner heltall deklarert. Når man bruker dette arrayet vil elementene array[0], array[1], array[2] og så videre legges etterhverandre i RAM. Den viktigste delen av programmet ser slik ut:                                                                                                                                                                                                                                                                                                                                                            int i,j;                                                                                                                                                                                             for(i = 0;i < 2000000;i++){                                                                                                                                                                             j = i*100;                                                                                                                                                                                           array[i] = i;                                                                                                                                                                                     }                                                                                                                                                                                                 Du kompilerer og kjører dette programmet og det fullføres svært raskt:                                                                                                                               $ time a.out                                                                                                                                                                                         Real:0.016 User:0.004 System:0.012 97.26%                                                                                                                                                            Du endrer så kun indeksen i til j i linjen der verdien skrives til arrayet slik at den blir array[j] = i; . Deretter kompilerer og kjører du programmet igjen og nå bruker det mye lengre tid:       $ time a.out                                                                                                                                                                                         Real:0.745 User:0.032 System:0.704 98.80%
Diskuter kort mulige årsaker til at denne versjonen av programmet bruker mye lengre tid til tross for at det utfører det samme antall, to millioner, skriveoperasjoner til RAM.
-------------------------------------------------------------------------------------------------
Det er to faktorer som medvirker til at versjon to tar nesten 50 ganger så lang tid. For det første utnytter den første versjonen cacheing av dataene som skrives mye bedre siden denne versjone hele tiden skriver til bytes i minne som ligger ved siden av hverandre. I versjon to er det hele tiden hundre byte i mellom. Men hvis kunne denne faktoren spilte inn, ville ikke forskjellen vært så stor, siden forskjellen mellom cahce og RAM-hastighet ikke er like stor. Faktor to er at den første versjonen kun skriver til de første 2 millioner heltallene i RAM. Typisk er et heltall på fire byte, og 8MByte brukes. Dette kan fint ligge i RAM. Versjon nummer to skriver da til 800MByte og dette vil typisk involvere skriving til swap om det ikke er plass til alle dataene i RAM på en gang. Den store forskjellen i hastighet tyder på at det er tilfelle.




  
